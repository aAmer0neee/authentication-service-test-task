// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package api_mock is a generated GoMock package.
package api_mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthApi is a mock of AuthApi interface.
type MockAuthApi struct {
	ctrl     *gomock.Controller
	recorder *MockAuthApiMockRecorder
}

// MockAuthApiMockRecorder is the mock recorder for MockAuthApi.
type MockAuthApiMockRecorder struct {
	mock *MockAuthApi
}

// NewMockAuthApi creates a new mock instance.
func NewMockAuthApi(ctrl *gomock.Controller) *MockAuthApi {
	mock := &MockAuthApi{ctrl: ctrl}
	mock.recorder = &MockAuthApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthApi) EXPECT() *MockAuthApiMockRecorder {
	return m.recorder
}

// LoginUser mocks base method.
func (m *MockAuthApi) LoginUser(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LoginUser", ctx)
}

// LoginUser indicates an expected call of LoginUser.
func (mr *MockAuthApiMockRecorder) LoginUser(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginUser", reflect.TypeOf((*MockAuthApi)(nil).LoginUser), ctx)
}

// RefreshToken mocks base method.
func (m *MockAuthApi) RefreshToken(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RefreshToken", ctx)
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockAuthApiMockRecorder) RefreshToken(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockAuthApi)(nil).RefreshToken), ctx)
}
