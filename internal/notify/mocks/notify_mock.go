// Code generated by MockGen. DO NOT EDIT.
// Source: notify.go

// Package notify_mock is a generated GoMock package.
package notify_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNotifyer is a mock of Notifyer interface.
type MockNotifyer struct {
	ctrl     *gomock.Controller
	recorder *MockNotifyerMockRecorder
}

// MockNotifyerMockRecorder is the mock recorder for MockNotifyer.
type MockNotifyerMockRecorder struct {
	mock *MockNotifyer
}

// NewMockNotifyer creates a new mock instance.
func NewMockNotifyer(ctrl *gomock.Controller) *MockNotifyer {
	mock := &MockNotifyer{ctrl: ctrl}
	mock.recorder = &MockNotifyerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotifyer) EXPECT() *MockNotifyerMockRecorder {
	return m.recorder
}

// SendMail mocks base method.
func (m *MockNotifyer) SendMail(recipient, message string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMail", recipient, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMail indicates an expected call of SendMail.
func (mr *MockNotifyerMockRecorder) SendMail(recipient, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMail", reflect.TypeOf((*MockNotifyer)(nil).SendMail), recipient, message)
}
